package com.VolunTrack.demo.ActivityRegistration.Domain.Model.Aggregates;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.time.LocalDate;
import java.time.LocalTime;

/**
 * Represents an Activity aggregate in the Activity Registration bounded context.
 * An activity is a root entity that represents a volunteer opportunity.
 */
@Entity
@Table(name = "activities")
@Getter
@Setter
@NoArgsConstructor
public class Activity {

    /**
     * The unique identifier for the activity.
     * This field is the primary key and is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long actividad_id;

    /**
     * The date of the activity.
     * This field is required.
     */
    @Column(name = "fecha", nullable = false)
    private LocalDate fecha;

    /**
     * The start time of the activity.
     * This field is required.
     */
    @Column(name = "hora_inicio", nullable = false)
    private LocalTime horainicio;

    /**
     * The end time of the activity.
     * This field is required.
     */
    @Column(name = "hora_fin", nullable = false)
    private LocalTime horaFin;

    /**
     * The title of the activity.
     * This field is required and has a maximum length of 200 characters.
     */
    @Column(name = "titulo", nullable = false, length = 200)
    private String titulo;

    /**
     * The description of the activity.
     * This field is required and has a maximum length of 1000 characters.
     */
    @Column(name = "descripcion", nullable = false, length = 1000)
    private String descripcion;

    /**
     * The instructions for the activity.
     * This field is optional and has a maximum length of 1000 characters.
     */
    @Column(name = "instrucciones", length = 1000)
    private String instrucciones;

    /**
     * The purpose of the activity.
     * This field is required and has a maximum length of 500 characters.
     */
    @Column(name = "proposito", nullable = false, length = 500)
    private String proposito;

    /**
     * The number of available slots for the activity.
     * This field is required.
     */
    @Column(name = "cupos", nullable = false)
    private int cupos;

    /**
     * The location of the activity.
     * This field is required and has a maximum length of 250 characters.
     */
    @Column(name = "ubicacion", nullable = false, length = 250)
    private String ubicacion;

    /**
     * The current status of the activity (e.g., PLANNED, ACTIVE, COMPLETED, CANCELLED).
     * This field is required and has a maximum length of 50 characters.
     */
    @Column(name = "estado", nullable = false, length = 50)
    private String estado;

    /**
     * The ID of the organization associated with this activity.
     * This field is a foreign key referencing the Organization entity.
     */
    @Column(name = "organizacion_id", nullable = false)
    private int organizacion_id;

    /**
     * Constructor for creating a new Activity instance.
     *
     * @param fecha The date of the activity.
     * @param horainicio The start time of the activity.
     * @param horaFin The end time of the activity.
     * @param titulo The title of the activity.
     * @param descripcion The description of the activity.
     * @param instrucciones The instructions for the activity.
     * @param proposito The purpose of the activity.
     * @param cupos The number of available slots for the activity.
     * @param ubicacion The location of the activity.
     * @param estado The current status of the activity.
     * @param organizacion_id The ID of the associated organization.
     */
    public Activity(LocalDate fecha, LocalTime horainicio, LocalTime horaFin, String titulo,
                    String descripcion, String instrucciones, String proposito, int cupos,
                    String ubicacion, String estado, int organizacion_id) {
        this.fecha = fecha;
        this.horainicio = horainicio;
        this.horaFin = horaFin;
        this.titulo = titulo;
        this.descripcion = descripcion;
        this.instrucciones = instrucciones;
        this.proposito = proposito;
        this.cupos = cupos;
        this.ubicacion = ubicacion;
        this.estado = estado;
        this.organizacion_id = organizacion_id;
    }

    /**
     * Constructor for creating a new Activity instance without instructions.
     *
     * @param fecha The date of the activity.
     * @param horainicio The start time of the activity.
     * @param horaFin The end time of the activity.
     * @param titulo The title of the activity.
     * @param descripcion The description of the activity.
     * @param proposito The purpose of the activity.
     * @param cupos The number of available slots for the activity.
     * @param ubicacion The location of the activity.
     * @param estado The current status of the activity.
     * @param organizacion_id The ID of the associated organization.
     */
    public Activity(LocalDate fecha, LocalTime horainicio, LocalTime horaFin, String titulo,
                    String descripcion, String proposito, int cupos,
                    String ubicacion, String estado, int organizacion_id) {
        this(fecha, horainicio, horaFin, titulo, descripcion, null, proposito, cupos, ubicacion, estado, organizacion_id);
    }
}